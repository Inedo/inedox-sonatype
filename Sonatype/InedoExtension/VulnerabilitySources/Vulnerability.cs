using System;
using System.Collections.Generic;
using System.Linq;
using Inedo.Extensibility.VulnerabilitySources;
using Newtonsoft.Json;

namespace Inedo.Extensions.Sonatype.VulnerabilitySources
{
    [JsonObject]
    internal struct Vulnerability
    {
        [JsonProperty("id")]
        public string Id { get; set; }
        [JsonProperty("title")]
        public string Title { get; set; }
        [JsonProperty("description")]
        public string Description { get; set; }
        [JsonProperty("cvssScore")]
        public double CVSSScore { get; set; }
        [JsonProperty("cvssVector")]
        public string CVSSVector { get; set; }
        [JsonProperty("cwe")]
        public string CWE { get; set; }
        [JsonProperty("Reference")]
        public string Reference { get; set; }
        // Not yet available in the API.
        [JsonIgnore]
        public string AffectedVersions { get; set; }

        internal VulnerabilityInfo GetInfo(PackageVulnerabilities packageVulnerabilities, IEnumerable<PackageCoordinate> packages)
        {
            var id = packages.FirstOrDefault(packageVulnerabilities.IsMatch) ?? throw new InvalidOperationException("Could not find matching package for " + Uri.UnescapeDataString(packageVulnerabilities.Coordinates));
            return new VulnerabilityInfoImpl(this, id);
        }
    }
}
