using Newtonsoft.Json;
using Inedo.Extensibility.VulnerabilitySources;
using Inedo.Feeds;

namespace Inedo.Extensions.Sonatype.VulnerabilitySources
{
    public sealed partial class OSSIndexVulnerabilitySource
    {
        [JsonObject]
        private sealed class PackageId
        {
            [JsonIgnore]
            internal IVulnerabilityPackage Package { get; }
            [JsonProperty("pm")]
            public string PackageManager { get; }
            [JsonProperty("name")]
            public string Name { get; }

            private PackageId(IVulnerabilityPackage package, string packageManager, string name)
            {
                this.Package = package;
                this.PackageManager = packageManager;
                this.Name = name;
            }

            internal static PackageId TryCreate(IVulnerabilityPackage package)
            {
                switch (package.FeedType)
                {
                    case FeedType.Bower:
                        return new PackageId(package, "bower", package.Name);
                    case FeedType.Chocolatey:
                        return new PackageId(package, "chocolatey", package.Name);
                    case FeedType.Deployment:
                    case FeedType.NuGet:
                    case FeedType.PowerShell:
                        return new PackageId(package, "nuget", package.Name);
                    case FeedType.Maven:
                        return null; // TODO: implement this when the v2 API supports Maven
                    case FeedType.Npm:
                        return new PackageId(package, "npm", package.Name);
                    default:
                        return null;
                }
            }
        }
    }
}
